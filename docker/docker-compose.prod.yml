version: "3.8"

services:
  osi-db:
    build:
      context: ..
      dockerfile: docker/DB.Dockerfile
    volumes:
    - postgres_data:/var/lib/postgresql/data
    networks:
    - internal
    environment:
      # Admin user password
      POSTGRES_PASSWORD:

      # Service user password
      DB_PASSWORD:
  osi-service:
    build:
      context: ..
      dockerfile: docker/SVC.prod.Dockerfile
    depends_on:
    - osi-db
    environment:
      # Postgres connection details
      #
      # DB_PASSWORD here must match DB_PASSWORD in the osi-db environment
      # settings.
      DB_PASSWORD:
#      DB_USERNAME: osi_service
#      DB_PORT: 5432
#      DB_POOL_SIZE: 20
#      DB_HOST: osi-db
#      DB_NAME: postgres

      # User administration user credentials
      ADMIN_USER:
      ADMIN_PASS:

      SERVER_PORT: 80
    command: >-
      sh -c "while ! nc -z osi-db 5432; do
        echo 'waiting for postgres';
        sleep 1;
      done;
      java -jar /service.jar"
    networks:
    - internal
    - traefik
    labels:
    - "traefik.http.routers.osid-service-dev.rule=Host(`osid-service-dev.local.apidb.org`)"
    - "traefik.http.routers.osid-service-dev.tls=true"
    - "traefik.http.routers.osid-service-dev.entrypoints=local"
    - "traefik.http.services.osid-service-dev.loadbalancer.server.port=80"


networks:
  internal:
    internal: true
  traefik:
    external: true

volumes:
  postgres_data:
