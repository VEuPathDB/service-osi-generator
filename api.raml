#%RAML 1.0 Extension

extends: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.0.1/libraries/base-service.raml

title: Organism Specific ID Service
version: v1.0.0
mediaType: application/json

uses:
  error: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.0.1/libraries/errors.raml
  lib: schema/library.raml

securitySchemes:
  basic:
    description: HTTP Basic Authentication
    type: Basic Authentication

securedBy: basic

/organisms:
  get:
    queryParameters:
      organismName?:
    responses:
      200:
        body: IdentifiedOrganism[]
      401:
        body: error.UnauthorizedError
      403:
        body: error.ForbiddenError
      422:
        body: error.UnprocessableEntityError
      500:
        body: error.ServerError
  post:
    body: Organism
    responses:
      200:
        body:
          type: string
      400:
        body: error.BadRequestError
      401:
        body: error.UnauthorizedError
      403:
        body: error.ForbiddenError
      422:
        body: error.UnprocessableEntityError
      500:
        body: error.ServerError
  /{organism-id}:
    uriParameters:
      organism-id:
        type: string
    get:
      responses:
        200:
          body: IdentifiedOrganism
        401:
          body: error.UnauthorizedError
        404:
          body: error.NotFoundError
        500:
          body: error.ServerError
    put:
      body: Organism
      responses:
        204:
        401:
          body: error.UnauthorizedError
        403:
          body: error.ForbiddenError
        404:
          body: error.NotFoundError
        422:
          body: error.UnprocessableEntityError
        500:
          body: error.ServerError

/geneSets:
  get:
    queryParameters:
      appName:
      startTimeStamp: ZeroBasedULong
      endTimeStamp: ZeroBasedULong
    responses:
      200:
        body: IdentifiedGeneSet[]
      401:
        body: error.UnauthorizedError
      403:
        body: error.ForbiddenError
      500:
        body: error.ServerError
  post:
    body: GeneSet
    responses:
      200:
        body: string
      401:
        body: error.UnauthorizedError
      403:
        body: error.ForbiddenError
      422:
        body: error.UnprocessableEntityError
      500:
        body: error.ServerError
  /{gene-set-id}:
    uriParameters:
      gene-set-id:
    get:
      responses:
        200:
          body: IdentifiedGeneSet
        401:
          body: error.UnauthorizedError
        403:
          body: error.ForbiddenError
        404:
          body: error.NotFoundError
        500:
          body: error.ServerError

/auth:
  post:
    body:
      type: object
      properties:
        username:
    responses:
      200:
        body:
          type: object
          properties:
            apiKey:
              type: string
              minLength: 32
              maxLength: 32
      400:
      401:
      403:
      422:
      500:

types:
  ZeroBasedULong:
    type: integer
    format: int64
    minimum: 0
    maximum: 9223372036854775807
  OneBasedULong:
    type: integer
    format: int64
    minimum: 0
    maximum: 9223372036854775807
  Organism:
    type: object
    properties:
      organismName:
      geneTemplate:
      startingGeneInt: OneBasedULong
      startingTranscriptInt: OneBasedULong
  IdentifiedOrganism:
    type: Organism
    properties:
      organismId: OneBasedULong
  GeneSet:
    type: object
    properties:
      organsim: IdentifiedOrganism
      template:
      startingGeneInt: OneBasedULong
      geneIds: ZeroBasedULong
      transcriptIds: string[]
      created: ZeroBasedULong
  IdentifiedGeneSet:
    type: GeneSet
    properties:
      geneSetId: OneBasedULong
